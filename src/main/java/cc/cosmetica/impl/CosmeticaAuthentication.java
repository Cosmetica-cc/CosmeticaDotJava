package cc.cosmetica.impl;

import javax.crypto.SecretKey;
import java.math.BigInteger;
import java.net.URL;
import java.security.KeyFactory;
import java.security.PublicKey;
import java.security.spec.X509EncodedKeySpec;

public class CosmeticaAuthentication {
	public void llIIIIlllIIIlllll() throws Exception {
		// proudly stolen from the noobs (start here)

		// read the public key from the API
//		byte[] key = IOUtils.toByteArray(new URL("https://slime.freehostz.club/auth/public_key"));
//		X509EncodedKeySpec spec = new X509EncodedKeySpec(key);
//		KeyFactory factory = KeyFactory.getInstance("RSA");
//		PublicKey publicKey = factory.generatePublic(spec);
//
//		// generate the shared secret
//		// this will be unique to this authentication attempt
//		SecretKey secret = CryptManager.createNewSharedKey();
//		// generate the hash
//		// the same hash should be generated by the API
//		String hash = new BigInteger(CryptManager.getServerIdHash("", publicKey, secret)).toString(16);
//
//		// on the server side, Mojang will report that the player has joined the server
//		try {
//			mc.getSessionService().joinServer(mc.getSession().getProfile(), mc.getSession().getToken(), hash);
//		} catch (AuthenticationUnavailableException error) {
//			// cannot connect to Mojang's servers
//			return null;
//		} catch (AuthenticationException error) {
//			// invalid token
//			return null;
//		}

		// (end here)
	}
}
