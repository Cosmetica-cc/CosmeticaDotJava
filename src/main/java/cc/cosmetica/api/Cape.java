/**
 * Copyright (c) 2022 EyezahMC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package cc.cosmetica.api;

import cc.cosmetica.impl.CosmeticFetcher;
import org.jetbrains.annotations.Nullable;

/**
 * Represents the data of a cape served by the cosmetica servers.
 */
public interface Cape {
	/**
	 * @return the id of this cape.
	 * @apiNote If not a cosmetica cape, an ID using a format which cannot conflict with cosmetica's will be generated by the server on the fly using the player UUID and timestamp, so cannot be guaranteed to be the same every time.
	 */
	String getId();

	/**
	 * @return the origin of this cape. Whether it be "Cosmetica" or "Optifine," etc...
	 */
	String getOrigin();

	/**
	 * @return the image, in base64 format.
	 * @apiNote not all cape servers use the same format and dimensions for a cape image. Some may trim whitespace, and others may use the old pre-elytra cape format! So make sure to account for this in parsing cape data.
	 */
	String getImage();

	/**
	 * @return whether the user's cape, if from an alternative cape server, has been replaced with a cosmetica cape, in accordance with the cape settings of the token this cape was obtained with.
	 */
	boolean isCosmeticaAlternative();

	/**
	 * Makes an api request to fetch cape data from cosmetica.
	 * @param id the id of the cape to request
	 * @return an object containing information on the cape. Null if there is no cape for the given id.
	 */
	@Nullable
	static CustomCape fetch(String id) {
		return CosmeticFetcher.getCape(id);
	}
}
